FROM php:8.0-fpm-alpine3.12

# Add configuration files
COPY ./.docker/php/ /

RUN docker-php-ext-install bcmath
RUN docker-php-ext-install iconv
RUN docker-php-ext-install pdo pdo_mysql
RUN docker-php-ext-install pcntl
RUN docker-php-ext-install exif
RUN docker-php-ext-install opcache

# Setup GD extension
RUN apk add --no-cache \
      freetype \
      libjpeg-turbo \
      libpng \
      freetype-dev \
      libjpeg-turbo-dev \
      libpng-dev \
    && docker-php-ext-configure gd \
      --with-freetype=/usr/include/ \
      --with-jpeg=/usr/include/ \
    && docker-php-ext-install -j$(nproc) gd \
    && docker-php-ext-enable gd \
    && apk del --no-cache \
      freetype-dev \
      libjpeg-turbo-dev \
      libpng-dev \
    && rm -rf /tmp/*

# Install xml extension
RUN apk add --no-cache \
    libxml2-dev \
    && docker-php-ext-install -j$(nproc) xml \
    && docker-php-ext-enable xml \
    && rm -rf /tmp/*

# Install zip extension
RUN apk add --no-cache \
    libzip-dev \
    && docker-php-ext-install -j$(nproc) zip \
    && docker-php-ext-enable zip \
    && rm -rf /tmp/*

# Install intl extension
RUN apk add --no-cache \
    icu-dev \
    && docker-php-ext-install -j$(nproc) intl \
    && docker-php-ext-enable intl \
    && rm -rf /tmp/*

# Install mbstring extension
RUN apk add --no-cache \
    oniguruma-dev \
    && docker-php-ext-install mbstring \
    && docker-php-ext-enable mbstring \
    && rm -rf /tmp/*

# Install xdebug extension
RUN apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \
    && pecl install xdebug-3.0.0 \
    && echo "xdebug.start_with_request=yes" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.idekey=PHPSTORM" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.mode=debug" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.max_nesting_level=1000" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.discover_client_host=yes" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.client_port=9000" >> /usr/local/etc/php/conf.d/xdebug.ini

RUN docker-php-source delete

RUN apk add --no-cache \
      unzip \
      nodejs \
      npm \
      bash \
      git \
    && rm -rf /tmp/*

# RUN apt-get install -y libmagickwand-dev
# RUN pecl install imagick
# RUN docker-php-ext-enable imagick

RUN touch /usr/local/etc/php/conf.d/development.ini \
    && echo "memory_limit = 256M;" >> /usr/local/etc/php/conf.d/development.ini \
    && echo "max_execution_time = 120;" >> /usr/local/etc/php/conf.d/development.ini \
    && echo "post_max_size = 200M;" >> /usr/local/etc/php/conf.d/development.ini \
    && echo "upload_max_filesize = 200M;" >> /usr/local/etc/php/conf.d/development.ini \
    && echo "short_open_tag = Off;" >> /usr/local/etc/php/conf.d/development.ini \
    && echo "error_reporting = E_ALL & ~E_DEPRECATED;" >> /usr/local/etc/php/conf.d/development.ini \
    && echo "display_errors = On;" >> /usr/local/etc/php/conf.d/development.ini \
    && echo "display_startup_errors = On;" >> /usr/local/etc/php/conf.d/development.ini

# There is filename starts with zzzz because it should be at the end of file list
RUN touch /usr/local/etc/php-fpm.d/zzzzz.conf \
    && echo "pm.max_requests = 500;" >> /usr/local/etc/php-fpm.d/zzzzz.conf \
    && echo "pm.max_children = 70;" >> /usr/local/etc/php-fpm.d/zzzzz.conf

# Environment settings
ENV PHP_USER_ID=33 \
    PHP_ENABLE_XDEBUG=0 \
    COMPOSER_ALLOW_SUPERUSER=1

# Add GITHUB_API_TOKEN support for composer
RUN chmod 700 \
    /usr/local/bin/docker-php-entrypoint \
    /usr/local/bin/composer

# Install Yarn
RUN npm install --global yarn

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- \
        --filename=composer.phar \
        --install-dir=/usr/local/bin

WORKDIR /var/www/html/
