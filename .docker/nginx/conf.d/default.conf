server {
    set $project_root /var/www/html;

    charset utf-8;
    client_max_body_size 128M;
    client_header_buffer_size 8192k;
    large_client_header_buffers 32 8192k;
    server_tokens off;

    listen 80;

    server_name dev.local localhost;
    root $project_root/frontend/web;
    index index.php;

    error_log  /var/log/nginx/default.error.log;

    # API B2B
    location ^~ /api {
        rewrite ^/api(.*)$ /api/web$1 last;
    }

    location ^~ /api/documentation/swagger {
        root $project_root;
        index index.html;
    }

    location ^~ /api/web {
        root $project_root;
        index index.php;

        try_files $uri/ /api/web/index.php$is_args$args;

        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
    }

    # API (NEW) /api/v1
    location ^~ /api/v1 {
        rewrite ^/api/v1(.*)$ /api2/web$1 last;
    }

    location ^~ /api/v1/documentation/swagger {
        alias $project_root/api2/documentation/swagger;
        index index.html;
    }

    location ^~ /api2/web {
        root $project_root;
        index index.php;

        try_files $uri/ /api2/web/index.php$is_args$args;

        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
    }

    # API (NEW) /api/v1/patient
    location ^~ /api/v1/patient {
        rewrite ^/api/v1/patient(.*)$ /api2-patient/web$1 last;
    }

    location ^~ /api2-patient/web {
        root $project_root;
        index index.php;

        try_files $uri/ /api2-patient/web/index.php$is_args$args;

        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
    }

    location ^~ /backend {
        rewrite ^/backend(.*)$ /backend/web$1 last;
    }

    location ^~ /backend/web {
        root $project_root;
        index index.php;

        try_files $uri $uri/ /backend/web/index.php$is_args$args;

        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
    }

    location ^~ /assets {
        alias $project_root/themes/basic/common/assets/dist/;

        try_files $uri $uri/ =404;

        location ~* .*\.php$ {
            return 404;
        }
    }

    location ^~ /backend/themes/basic {
        alias $project_root/themes/basic/backend/assets/dist/;

        try_files $uri $uri/ =404;

        location ~* .*\.php$ {
            return 404;
        }
    }

    location ^~ /uploads {
        internal;
        root $project_root;
        expires 0;
        add_header Cache-Control "public, must-revalidate";
    }

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~* /\. {
        access_log off;
        log_not_found off;
        return 404;
    }

    location ~* \.(js|css|less|png|jpg|jpeg|gif|ico|woff|ttf|svg|tpl)$ {
        try_files $uri =404;
        #expires 24h;
        access_log off;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}
